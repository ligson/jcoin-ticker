name: BuildAndPackage

on:
  push:
    tags:
      - '*'

env:
  ACTIONS_RUNNER_DEBUG: true
  ACTIONS_STEP_DEBUG: true
permissions:
  contents: write

jobs:
  # 构建作业 - 多系统并行构建
  build:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ macos-latest, ubuntu-latest, windows-latest ]

    steps:
      - name: Check out Git repository
        uses: actions/checkout@v1

      - name: Install Node.js, NPM and Yarn
        uses: actions/setup-node@v1
        with:
          node-version: v22.21.0

      - name: Install dependencies
        run: yarn install && yarn global add electron-builder

      - name: Build Electron app
        run: yarn build  # 使用 electron-builder 构建
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}  # 明确传递默认 Token

      - name: Upload artifacts
        uses: actions/upload-artifact@v4
        with:
          name: build-artifacts-${{ matrix.os }}
          path: release/

  # 发布作业 - 依赖构建完成后再执行
  release:
    needs: build  # 等待所有构建作业完成
    runs-on: ubuntu-latest  # 只在单一系统上执行

    steps:
      - name: Check out Git repository
        uses: actions/checkout@v1

      - name: Download all artifacts
        uses: actions/download-artifact@v4
        with:
          path: downloaded-artifacts

      - name: Create Release
        id: create_release
        uses: actions/create-release@v2
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}  # 使用默认的 GITHUB_TOKEN
        with:
          tag_name: ${{ github.ref }}
          release_name: Release ${{ github.ref }}
          draft: false
          prerelease: false

      - name: Upload release assets
        uses: actions/upload-release-asset@v2
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}  # 使用默认的 GITHUB_TOKEN
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./downloaded-artifacts/**/*
          asset_name: ${{ matrix.os }}-build
          asset_content_type: application/zip
